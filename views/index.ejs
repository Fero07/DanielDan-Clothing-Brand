<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1, width=device-width" />
    <title>DanielDan Luxury Wears</title>
    <link rel="icon" href="assets/logo.ico" type="image/x-icon" />
    <link rel="stylesheet" href="styles/global.css" />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@400&display=swap"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Duru Sans:wght@400&display=swap"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
  </head>

  <body>
    <div id="partial-container" style="display: none;"></div>

    <div class="loadscreen">
      <div class="loader"></div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script>
      window.addEventListener('load', function () {
        const loadingAnimation = document.getElementsByClassName('loadscreen')[0];
        const content = document.getElementById('partial-container');

        setTimeout(() => {
          loadingAnimation.style.display = 'none';
          content.style.display = 'block';
        }, 1500);
      });

      function loadPartial() {
        const screenSize = window.innerWidth;

        fetch(`/load-partial?screenSize=${screenSize}`)
          .then((response) => response.text())
          .then((html) => {
            document.getElementById('partial-container').innerHTML = html;
            setupForm();

            const scrollToTopBtn = document.getElementById('scrollToTopBtn');
            if (scrollToTopBtn) {
              scrollToTopBtn.addEventListener('click', function () {
                window.scrollTo({
                  top: 0,
                  behavior: 'smooth',
                });
              });
            }

            const scrollToTopBtns = document.getElementsByClassName('scrollToTopBtn2');
            if (scrollToTopBtns.length > 0) {
              Array.from(scrollToTopBtns).forEach(btn => {
                btn.addEventListener('click', function () {
                  window.scrollTo({
                    top: 0,
                    behavior: 'smooth',
                  });
                });
              });
            }
          });
      } 

      // Initial load
      loadPartial();

      // Check for resize and update content
      let lastWidth = window.innerWidth;
      let resizeTimeout;

      function checkResize() {
        const currentWidth = window.innerWidth;
        if (currentWidth !== lastWidth) {
          lastWidth = currentWidth;
          loadPartial(); // Update content without reload
        }
      }

      function debounce(func, wait) {
        return function (...args) {
          clearTimeout(resizeTimeout);
          resizeTimeout = setTimeout(() => func.apply(this, args), wait);
        };
      }

      window.addEventListener('resize', debounce(checkResize, 500));

      function setupForm() {
        const form = document.getElementById('emailForm');

        form.addEventListener('submit', function (event) {
          event.preventDefault(); // Prevent the default form submission

          // Check if the form is valid
          if (!formCheck()) {
            return; // Stop further processing if not valid
          }

          const sendButton = document.getElementById('sendButton'); // assuming you have a send button
          sendButton.textContent = "Sending...";

          const formData = new FormData(event.target);
          const data = {
            name: formData.get('name'),
            email: formData.get('email'),
            message: formData.get('message'),
          };

          fetch('/send-email', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
          })
            .then((response) => {
              if (response.ok) {
                return response.json();
              }
              throw new Error('Error sending message.');
            })
            .then((data) => {
              console.log(data.message); // Log the success message
              
              sendButton.textContent = "Send Message";
              
              // Show the popup
              const popupCard = document.getElementById('popupCard');
              popupCard.style.display = 'flex';

              // Optionally hide it after a few seconds
              setTimeout(() => {
                popupCard.style.display = 'none';
              }, 700);
            })
            .catch((error) => {
              console.error('Error:', error);
              // Show an error message if needed
            });
        });
      }

      function formCheck() {
        let isValid = true;

        // Select all input fields and textarea
        const nameField = document.getElementById('name');
        const emailField = document.getElementById('email');
        const messageField = document.getElementById('message');

        // Validate on submit
        if (!nameField.value.trim()) {
          nameField.style.border = '2px solid red';
          nameField.nextElementSibling.style.display = 'block';
          isValid = false;
        } else {
          nameField.style.border = ''; // Reset border if valid
          nameField.nextElementSibling.style.display = 'none'; // Hide error message
        }

        if (!emailField.value.trim()) {
          emailField.style.border = '2px solid red';
          emailField.nextElementSibling.style.display = 'block';
          isValid = false;
        } else {
          emailField.style.border = ''; // Reset border if valid
          emailField.nextElementSibling.style.display = 'none'; // Hide error message
        }

        if (!messageField.value.trim()) {
          messageField.style.border = '2px solid red';
          messageField.nextElementSibling.style.display = 'block';
          isValid = false;
        } else {
          messageField.style.border = ''; // Reset border if valid
          messageField.nextElementSibling.style.display = 'none'; // Hide error message
        }

        // Prevent form submission if any field is invalid
        return isValid; // Return whether the form is valid
      }

      // Add real-time validation for name, email, and message fields
      const fields = [
        document.getElementById('name'),
        document.getElementById('email'),
        document.getElementById('message'),
      ];

      fields.forEach((field) => {
        field.addEventListener('input', function () {
          if (field.value.trim()) {
            field.style.border = ''; // Remove red border
            field.nextElementSibling.style.display = 'none'; // Hide error message
          }
        });
      });
    </script>
  </body>
</html>
